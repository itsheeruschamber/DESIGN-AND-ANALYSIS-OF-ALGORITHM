#include <stdio.h>

int max(int a, int b)
{
    return (a > b) ? a : b;
}

void printMatrix(int table[][100], int n, int W)
{
    printf("Step-by-Step Matrix Table:\n");
    for (int i = 0; i <= n; i++)
    {
        for (int j = 0; j <= W; j++)
        {
            printf("%d\t", table[i][j]);
        }
        printf("\n");
    }
}

int knapsack(int p[], int w[], int n, int W)
{
    int table[100][100];
    for (int i = 0; i <= n; i++)
    {
        for (int j = 0; j <= W; j++)
        {
            if (i == 0 || j == 0)
            {
                table[i][j] = 0;
            }
            else if (w[i - 1] <= j)
            {
                table[i][j] = max(p[i - 1] + table[i - 1][j - w[i - 1]], table[i - 1][j]);
            }
            else
            {
                table[i][j] = table[i - 1][j];
            }
        }
    }
    printMatrix(table, n, W);
    return table[n][W];
}

int main()
{
    int w[100];
    int p[100];
    int n;

    printf("Enter the total number of items: ");
    scanf("%d", &n);

    printf("Enter the weight of the items:\n");
    for (int i = 0; i < n; i++)
    {
        scanf("%d", &w[i]);
    }

    printf("Enter the profits of the items:\n");
    for (int i = 0; i < n; i++)
    {
        scanf("%d", &p[i]);
    }

    int W;
    printf("Enter the maximum weight: ");
    scanf("%d", &W);

    int profit = knapsack(p, w, n, W);
    printf("The maximum profit is %d\n", profit);

    return 0;
}
//OUTPUT==>>

/tmp/kHK9vyWEOc.o
Enter the total number of items: 4
Enter the weight of the items:
3 4 5 6
Enter the profits of the items:
2 3 4 1
Enter the maximum weight: 8
Step-by-Step Matrix Table:
0	0	0	0	0	0	0	0	0	
0	0	0	2	2	2	2	2	2	
0	0	0	2	3	3	3	5	5	
0	0	0	2	3	4	4	5	6	
0	0	0	2	3	4	4	5	6	
The maximum profit is 6
