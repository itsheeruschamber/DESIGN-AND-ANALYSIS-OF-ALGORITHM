#include <stdio.h>
#include <stdlib.h>

#define MAX_VERTICES 100

struct Node {
    int vertex;
    struct Node* next;
};

struct Graph {
    int numVertices;
    struct Node** adjLists;
    int* visited;
};

struct Node* createNode(int v) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->vertex = v;
    newNode->next = NULL;
    return newNode;
}

struct Graph* createGraph(int vertices) {
    struct Graph* graph = (struct Graph*)malloc(sizeof(struct Graph));
    graph->numVertices = vertices;

    graph->adjLists = (struct Node**)malloc(vertices * sizeof(struct Node*));
    graph->visited = (int*)malloc(vertices * sizeof(int));

    int i;
    for (i = 0; i < vertices; i++) {
        graph->adjLists[i] = NULL;
        graph->visited[i] = 0;
    }

    return graph;
}

void addEdge(struct Graph* graph, int src, int dest) {
    struct Node* newNode = createNode(dest);
    newNode->next = graph->adjLists[src];
    graph->adjLists[src] = newNode;
}

void topologicalSortDFS(struct Graph* graph, int vertex, int* visited, struct Node** stack) {
    visited[vertex] = 1;

    struct Node* adjList = graph->adjLists[vertex];
    while (adjList != NULL) {
        int adjVertex = adjList->vertex;
        if (!visited[adjVertex]) {
            topologicalSortDFS(graph, adjVertex, visited, stack);
        }
        adjList = adjList->next;
    }

    // Push the vertex to the stack after processing its neighbors
    struct Node* newVertex = createNode(vertex);
    newVertex->next = *stack;
    *stack = newVertex;
}

void topologicalSort(struct Graph* graph) {
    struct Node* stack = NULL;

    int* visited = (int*)malloc(graph->numVertices * sizeof(int));
    int i;
    for (i = 0; i < graph->numVertices; i++) {
        visited[i] = 0;
    }

    for (i = 0; i < graph->numVertices; i++) {
        if (!visited[i]) {
            topologicalSortDFS(graph, i, visited, &stack);
        }
    }

    // Print the topological ordering
    printf("Topological Ordering: ");
    while (stack != NULL) {
        printf("%d ", stack->vertex);
        stack = stack->next;
    }
    printf("\n");
}

int main() {
    int numVertices = 6;
    struct Graph* graph = createGraph(numVertices);

    addEdge(graph, 5, 2);
    addEdge(graph, 5, 0);
    addEdge(graph, 4, 0);
    addEdge(graph, 4, 1);
    addEdge(graph, 2, 3);
    addEdge(graph, 3, 1);

    topologicalSort(graph);

    return 0;
}
